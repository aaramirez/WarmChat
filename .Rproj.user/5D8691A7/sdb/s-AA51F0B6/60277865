{
    "contents" : "cleanComm<-function(word){\n  \n\tenc2utf8(word)\n  \n  ## @knitr to_lowering\n  word<- tolower(word)\n\n  ## @knitr removing_punctuations\n  word<- removePunctuation(word)\n  \n  ## @knitr removing_number\n  word <- removeNumbers(word)\n\n  ## @knitr removing_whitespaces\n  wordn <- stripWhitespace(word)\n\n  ## @knitr steming_doc\n  #word <- stemDocument(word)\n  #word <- stemCompletion(word,dictionary=wordn)\n  return(as.character(word))\n}\n\n# Preprocesamiento de los datos \ncleanSet<- function(word){\n  \n  ## @knitr encoding_input\n  #enc2utf8(word)\n  \n  ## @knitr creating_corpus\n  vs <- VectorSource(word)\n  \n  txt <- Corpus(vs)\n  rm(\"vs\")\n  \n  ## @knitr to_lowering\n  txtlc <- tm_map(txt, content_transformer(tolower))\n  rm(\"txt\")\n  ## @knitr removing_punctuations\n  txtnp <- tm_map(txtlc, content_transformer(removePunctuation))\n  rm(\"txtlc\")\n  ## @knitr removing_number\n  txtnn <- tm_map(txtnp, content_transformer(removeNumbers))\n  rm(\"txtnp\")\n  stopwords <- c(\"a\", \"about\", \"above\", \"above\", \"across\", \"after\", \"afterwards\", \"again\", \"against\", \"all\", \"almost\", \"alone\", \"along\", \"already\", \"also\",\"although\",\"always\",\"am\",\"among\", \"amongst\", \"amoungst\", \"amount\",  \"an\", \"and\", \"another\", \"any\",\"anyhow\",\"anyone\",\"anything\",\"anyway\", \"anywhere\", \"are\", \"around\", \"as\",  \"at\", \"back\",\"be\",\"became\", \"because\",\"become\",\"becomes\", \"becoming\", \"been\", \"before\", \"beforehand\", \"behind\", \"being\", \"below\", \"beside\", \"besides\", \"between\", \"beyond\", \"bill\", \"both\", \"bottom\",\"but\", \"by\", \"call\", \"can\", \"cannot\", \"cant\", \"co\", \"con\", \"could\", \"couldnt\", \"cry\", \"de\", \"describe\", \"detail\", \"do\", \"done\", \"down\", \"due\", \"during\", \"each\", \"eg\", \"eight\", \"either\", \"eleven\",\"else\", \"elsewhere\", \"empty\", \"enough\", \"etc\", \"even\", \"ever\", \"every\", \"everyone\", \"everything\", \"everywhere\", \"except\", \"few\", \"fifteen\", \"fify\", \"fill\", \"find\", \"fire\", \"first\", \"five\", \"for\", \"former\", \"formerly\", \"forty\", \"found\", \"four\", \"from\", \"front\", \"full\", \"further\", \"get\", \"give\", \"go\", \"had\", \"has\", \"hasnt\", \"have\", \"he\", \"hence\", \"her\", \"here\", \"hereafter\", \"hereby\", \"herein\", \"hereupon\", \"hers\", \"herself\", \"him\", \"himself\", \"his\", \"how\", \"however\", \"hundred\", \"ie\", \"if\", \"in\", \"inc\", \"indeed\", \"interest\", \"into\", \"is\", \"it\", \"its\", \"itself\", \"keep\", \"last\", \"latter\", \"latterly\", \"least\", \"less\", \"ltd\", \"made\", \"many\", \"may\", \"me\", \"meanwhile\", \"might\", \"mill\", \"mine\", \"more\", \"moreover\", \"most\", \"mostly\", \"move\", \"much\", \"must\", \"my\", \"myself\", \"name\", \"namely\", \"neither\", \"never\", \"nevertheless\", \"next\", \"nine\", \"no\", \"nobody\", \"none\", \"noone\", \"nor\", \"not\", \"nothing\", \"now\", \"nowhere\", \"of\", \"off\", \"often\", \"on\", \"once\", \"one\", \"only\", \"onto\", \"or\", \"other\", \"others\", \"otherwise\", \"our\", \"ours\", \"ourselves\", \"out\", \"over\", \"own\",\"part\", \"per\", \"perhaps\", \"please\", \"put\", \"rather\", \"re\", \"same\", \"see\", \"seem\", \"seemed\", \"seeming\", \"seems\", \"serious\", \"several\", \"she\", \"should\", \"show\", \"side\", \"since\", \"sincere\", \"six\", \"sixty\", \"so\", \"some\", \"somehow\", \"someone\", \"something\", \"sometime\", \"sometimes\", \"somewhere\", \"still\", \"such\", \"system\", \"take\", \"ten\", \"than\", \"that\", \"the\", \"their\", \"them\", \"themselves\", \"then\", \"thence\", \"there\", \"thereafter\", \"thereby\", \"therefore\", \"therein\", \"thereupon\", \"these\", \"they\", \"thickv\", \"thin\", \"third\", \"this\", \"those\", \"though\", \"three\", \"through\", \"throughout\", \"thru\", \"thus\", \"to\", \"together\", \"too\", \"top\", \"toward\", \"towards\", \"twelve\", \"twenty\", \"two\", \"un\", \"under\", \"until\", \"up\", \"upon\", \"us\", \"very\", \"via\", \"was\", \"we\", \"well\", \"were\", \"what\", \"whatever\", \"when\", \"whence\", \"whenever\", \"where\", \"whereafter\", \"whereas\", \"whereby\", \"wherein\", \"whereupon\", \"wherever\", \"whether\", \"which\", \"while\", \"whither\", \"who\", \"whoever\", \"whole\", \"whom\", \"whose\", \"why\", \"will\", \"with\", \"within\", \"without\", \"would\", \"yet\", \"you\", \"your\", \"yours\", \"yourself\", \"yourselves\", \"the\")\n  withoutstop <- tm_map(txtnn, content_transformer(function(x) removeWords(x,stopwords)))\n  \n  ## @knitr removing_whitespaces\n  txtnspc <- tm_map(withoutstop, content_transformer(stripWhitespace))\n  rm(\"txtnn\",\"withoutstop\")\n  ## @knitr steming_doc\n  txtstem <- tm_map(txtnspc, content_transformer(stemDocument))\n  \n  word1 <- tm_map(txtstem, content_transformer(PlainTextDocument))\n\n  dtm <- TermDocumentMatrix(word1)\n  \n  return(dtm)\n}\n\n## Definicion de una funcion encargada de generar una arreglo con las palabras pertencientes al mismo comentario\nsplitting <-function(data){\n  val <- matrix()\n  j <- 1\n  for(i in data){\n    val <- unlist(strsplit(as.character(i), \"[ ]\"))    \n    j <- j+1\n  }\n  val\n}\n## @knitr end_chunk\n",
    "created" : 1439327279455.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "940514135",
    "id" : "60277865",
    "lastKnownWriteTime" : 1439327715,
    "path" : "C:/Users/wilmer g/Desktop/DM/WarmChat/clean.R",
    "project_path" : "clean.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}